library(genalg)

expectation <- function(r.a, s, b, T){
    (b)/((s-1)) * (1 - (b / (b + T))^(s - 1)) * r.a
}

expectation(1, 2, 1, 1)

expectation(2, 2, 1, 1)

df.data <- read.csv(‘Parameter_est_survey’, sep = ‘,’)

length(names(df.data))

names(df.data)

proper.names <- c('customer’; '2017.11’; ‘2017.12’; ‘2018.7’; ‘2017.8’; ’2017.9’; ‘2017.10’; ‘2017.11’; '2017.12’; '2018.1’; ’2018.2’; ‘2018.3’; ‘2018.4’)

names(df.data) <- proper.names

df.data

XTXM <- 1
for (i in 2:length(names(df.data))){
    XTXM[i-1] <- mean(df.data[, i])
}

XTXM

dump('XTXM', file = 'XTXM.r')

BitsToInt<-function(x) {
    packBits(rev(c(rep(FALSE, 32-length(x)%%32), as.logical(x))), "integer")
}

genalg.function <- function(chromosome){
    chr.r.a <- chromosome[1:14]
    chr.s <- chromosome[15:28]
    chr.b <- chromosome[29:42]
    val.r.a <- BitsToInt(chr.r.a) / 100 + 0.0000001
    val.s <- BitsToInt(chr.s) / 100 + 1.0000001
    val.b <- BitsToInt(chr.b) / 100 + 0.0000001
    exp <- expectation(val.r.a, val.s, val.b, 1)
    XTXM <-source('XTXM.r')
    XTXM <- XTXM$value
    result <- sum((XTXM - exp)^2)
    result
}

chromosome <- 1
chromosome[1:30] <- 1
chromosome[31:42] <- 0
genalg.function(chromosome)

ga.results <- rbga.bin(size = 42, popSize = 100, iters = 100, mutationChance = 0.3, evalFunc = genalg.function)

plot(ga.results)

str(ga.results)

results.matrix <- cbind(ga.results$population, ga.results$evaluations)

ordered.matrix <- results.matrix[order(results.matrix[, ncol(results.matrix)]), ]

chromosome <- ordered.matrix[1, ]

chromosome <- chromosome[1:42]

function.parameters <- function(chromosome){
    chr.r.a <- chromosome[1:14]
    chr.s <- chromosome[15:28]
    chr.b <- chromosome[29:42]
    val.r.a <- BitsToInt(chr.r.a) / 100 + 0.0000001
    val.s <- BitsToInt(chr.s) / 100 + 1.0000001
    val.b <- BitsToInt(chr.b) / 100 + 0.0000001
    result <- numeric(0)
    result$r.a <- val.r.a
    result$s <- val.s
    result$b <- val.b
    result
}

params <- function.parameters(chromosome)

params
